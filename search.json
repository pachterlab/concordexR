[{"path":"https://pachterlab.github.io/concordexR/articles/concordex-nonspatial.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Using concordex in to assess cluster boundaries in scRNA-seq","text":"UMAP commonly used scRNA-seq data analysis visualization tool projecting high dimensional data onto 2 dimensions visualize cell clustering. However, UMAP prone showing spurious clustering distorting distances (Chari, Banerjee, Pachter 2021). Moreover, UMAP shows clustering seems correspond graph-based clusters Louvain Leiden k nearest neighbor graph used clustering UMAP. developed concordex quantitative alternative UMAP cluster visualization without misleading problems UMAP. package R implementation original Python command line tool. nutshell, concordex finds proportion cells among k-nearest neighbors cell cluster label cell . computed across labels average labels returned metric indicates quality clustering. clustering separates cells well, observed similarity matrix diagonal dominant.","code":"library(concordexR) library(TENxPBMCData) library(BiocNeighbors) library(bluster) library(scater) library(patchwork) library(ggplot2) theme_set(theme_bw())"},{"path":"https://pachterlab.github.io/concordexR/articles/concordex-nonspatial.html","id":"preprocessing","dir":"Articles","previous_headings":"","what":"Preprocessing","title":"Using concordex in to assess cluster boundaries in scRNA-seq","text":"vignette, demonstrate usage concordex human peripheral blood mononuclear cells (PBMC) scRNA-seq dataset 10X Genomics. data loaded SingleCellExperiment object. plot standard QC metrics: total number UMIs detected per cell (nCounts), number genes detected (nGenes), percentage UMIs mitochondrially encoded genes (pct_mito).   Remove outliers cells high percentage mitochondrial counts high percentage expected biologically cell type: normalize data:","code":"sce <- TENxPBMCData(\"pbmc3k\") #> see ?TENxPBMCData and browseVignettes('TENxPBMCData') for documentation #> downloading 1 resources #> retrieving 1 resource #> loading from cache sce$nCounts <- colSums(counts(sce)) sce$nGenes <- colSums(counts(sce) > 0) mito_inds <- grepl(\"^MT-\", rowData(sce)$Symbol_TENx) sce$pct_mito <- colSums(counts(sce)[mito_inds,])/sce$nCounts * 100 plotColData(sce, \"nCounts\") +   plotColData(sce, \"nGenes\") +   plotColData(sce, \"pct_mito\") p1 <- plotColData(sce, x = \"nCounts\", y = \"nGenes\") +   geom_density2d() p2 <- plotColData(sce, x = \"nCounts\", y = \"pct_mito\") +   geom_density2d()  p1 + p2 sce <- sce[, sce$nCounts < 10000 & sce$pct_mito < 8] sce <- sce[rowSums(counts(sce)) > 0,] sce <- logNormCounts(sce)"},{"path":"https://pachterlab.github.io/concordexR/articles/concordex-nonspatial.html","id":"graph-based-clustering-in-pca-space","dir":"Articles","previous_headings":"","what":"Graph based clustering in PCA space","title":"Using concordex in to assess cluster boundaries in scRNA-seq","text":"simplicity, top 500 highly variable genes used perform PCA: See number PCs use later elbow plot:  Percentage variance explained drops sharply PC1 PC5, definitely levels PC10, use top 10 PCs clustering . graph based Leiden clustering uses k nearest neighbor graph. demonstration , use k = 10. See clusters look like PCA space:  clusters seem well-separated along first 4 PCs. Since UMAP commonly used visualize clusters, plot UMAP although don’t recommend UMAP ’s prone showing spurious clusters distorting distances. UMAP also uses k nearest neighbor graph, use k = 10 :  part, clusters clearly separated UMAP.","code":"sce <- runPCA(sce, ncomponents = 30, ntop = 500, scale = TRUE) plot(attr(reducedDim(sce, \"PCA\"), \"percentVar\"), ylab = \"Percentage of variance explained\") set.seed(29) sce$cluster <- clusterRows(reducedDim(sce, \"PCA\")[,seq_len(10)],                            NNGraphParam(k = 10, cluster.fun = \"leiden\",                                         cluster.args = list(                                           objective_function = \"modularity\"                                         ))) plotPCA(sce, color_by = \"cluster\", ncomponents = 4) #> Warning in data.frame(gg1$all, df_to_plot[, -reddim_cols]): row names were #> found from a short variable and have been discarded sce <- runUMAP(sce, dimred = \"PCA\", n_dimred = 10, n_neighbors = 10) plotUMAP(sce, color_by = \"cluster\")"},{"path":"https://pachterlab.github.io/concordexR/articles/concordex-nonspatial.html","id":"enter-concordex","dir":"Articles","previous_headings":"","what":"Enter concordex","title":"Using concordex in to assess cluster boundaries in scRNA-seq","text":"Since UMAP prone showing spurious clusters, ’ll see concordex metric says clustering whether agrees UMAP visualization. explicitly obtain k nearest neighbor graph, clustering UMAP store graph . result list two n (number cell) k matrices. first indices cell’s neighbors, adjacency list can matrix due fixed number neighbors, second distances cell neighbors. concordex, first matrix relevant. adjacency matrix, either sparse dense, stored Seurat object, can also used. cluster labels permuted 100 times. argument compute_similarity indicates concordex return cluster-cluster similarity matrix. entries matrix represent proportion cells label neighborhood cells label.","code":"g <- findKNN(reducedDim(sce, \"PCA\")[,seq_len(10)], k = 10) res <- calculateConcordex(     sce,      labels=\"cluster\",      use.dimred=\"PCA\",     compute_similarity=TRUE ) sim <- attr(res, \"similarity\")  round(sim, 2) #>      1    2    3    4    5    6    7    8    9 #> 1 0.71 0.00 0.00 0.00 0.03 0.00 0.24 0.01 0.00 #> 2 0.01 0.98 0.00 0.00 0.00 0.00 0.01 0.00 0.00 #> 3 0.00 0.00 0.97 0.00 0.00 0.03 0.00 0.00 0.00 #> 4 0.00 0.00 0.00 0.94 0.06 0.00 0.00 0.00 0.00 #> 5 0.13 0.00 0.00 0.02 0.76 0.00 0.05 0.03 0.00 #> 6 0.00 0.00 0.07 0.00 0.00 0.93 0.00 0.00 0.00 #> 7 0.07 0.00 0.00 0.00 0.00 0.00 0.90 0.03 0.00 #> 8 0.06 0.00 0.00 0.00 0.02 0.00 0.50 0.42 0.00 #> 9 0.00 0.00 0.28 0.29 0.00 0.08 0.00 0.00 0.33"},{"path":"https://pachterlab.github.io/concordexR/articles/concordex-nonspatial.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Using concordex in to assess cluster boundaries in scRNA-seq","text":"","code":"sessionInfo() #> R version 4.4.2 (2024-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.1 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] patchwork_1.3.0             scater_1.32.1               #>  [3] ggplot2_3.5.1               scuttle_1.14.0              #>  [5] bluster_1.14.0              BiocNeighbors_1.22.0        #>  [7] TENxPBMCData_1.22.0         HDF5Array_1.32.1            #>  [9] rhdf5_2.48.0                DelayedArray_0.30.1         #> [11] SparseArray_1.4.8           S4Arrays_1.4.1              #> [13] abind_1.4-8                 Matrix_1.7-1                #> [15] SingleCellExperiment_1.26.0 SummarizedExperiment_1.34.0 #> [17] Biobase_2.64.0              GenomicRanges_1.56.2        #> [19] GenomeInfoDb_1.40.1         IRanges_2.38.1              #> [21] S4Vectors_0.42.1            BiocGenerics_0.50.0         #> [23] MatrixGenerics_1.16.0       matrixStats_1.5.0           #> [25] concordexR_1.7.1            BiocStyle_2.32.1            #>  #> loaded via a namespace (and not attached): #>   [1] DBI_1.2.3                 gridExtra_2.3             #>   [3] rlang_1.1.4               magrittr_2.0.3            #>   [5] compiler_4.4.2            RSQLite_2.3.9             #>   [7] DelayedMatrixStats_1.26.0 png_0.1-8                 #>   [9] systemfonts_1.1.0         vctrs_0.6.5               #>  [11] pkgconfig_2.0.3           SpatialExperiment_1.14.0  #>  [13] crayon_1.5.3              fastmap_1.2.0             #>  [15] dbplyr_2.5.0              magick_2.8.5              #>  [17] XVector_0.44.0            labeling_0.4.3            #>  [19] rmarkdown_2.29            ggbeeswarm_0.7.2          #>  [21] UCSC.utils_1.0.0          ragg_1.3.3                #>  [23] purrr_1.0.2               bit_4.5.0.1               #>  [25] xfun_0.50                 zlibbioc_1.50.0           #>  [27] cachem_1.1.0              beachmat_2.20.0           #>  [29] jsonlite_1.8.9            blob_1.2.4                #>  [31] rhdf5filters_1.16.0       Rhdf5lib_1.26.0           #>  [33] BiocParallel_1.38.0       irlba_2.3.5.1             #>  [35] parallel_4.4.2            cluster_2.1.6             #>  [37] R6_2.5.1                  bslib_0.8.0               #>  [39] jquerylib_0.1.4           Rcpp_1.0.14               #>  [41] bookdown_0.42             knitr_1.49                #>  [43] FNN_1.1.4.1               igraph_2.1.3              #>  [45] tidyselect_1.2.1          viridis_0.6.5             #>  [47] yaml_2.3.10               codetools_0.2-20          #>  [49] curl_6.1.0                lattice_0.22-6            #>  [51] tibble_3.2.1              withr_3.0.2               #>  [53] KEGGREST_1.44.1           evaluate_1.0.3            #>  [55] desc_1.4.3                isoband_0.2.7             #>  [57] BiocFileCache_2.12.0      ExperimentHub_2.12.0      #>  [59] Biostrings_2.72.1         pillar_1.10.1             #>  [61] BiocManager_1.30.25       filelock_1.0.3            #>  [63] generics_0.1.3            BiocVersion_3.19.1        #>  [65] sparseMatrixStats_1.16.0  munsell_0.5.1             #>  [67] scales_1.3.0              glue_1.8.0                #>  [69] tools_4.4.2               AnnotationHub_3.12.0      #>  [71] ScaledMatrix_1.12.0       fs_1.6.5                  #>  [73] grid_4.4.2                AnnotationDbi_1.66.0      #>  [75] colorspace_2.1-1          GenomeInfoDbData_1.2.12   #>  [77] beeswarm_0.4.0            BiocSingular_1.20.0       #>  [79] vipor_0.4.7               rsvd_1.0.5                #>  [81] cli_3.6.3                 rappdirs_0.3.3            #>  [83] textshaping_0.4.1         viridisLite_0.4.2         #>  [85] dplyr_1.1.4               uwot_0.2.2                #>  [87] gtable_0.3.6              sass_0.4.9                #>  [89] digest_0.6.37             ggrepel_0.9.6             #>  [91] farver_2.1.2              rjson_0.2.23              #>  [93] htmlwidgets_1.6.4         memoise_2.0.1             #>  [95] htmltools_0.5.8.1         pkgdown_2.1.1             #>  [97] lifecycle_1.0.4           httr_1.4.7                #>  [99] mime_0.12                 MASS_7.3-61               #> [101] bit64_4.5.2"},{"path":[]},{"path":"https://pachterlab.github.io/concordexR/articles/overview.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Overview of concordexR","text":"package active development available Bioconductor version 3.20 release. , please install package Github Bioconductor devel branch.","code":"if (!requireNamespace(\"BiocManager\", quietly=TRUE))     install.packages(\"BiocManager\")  #BiocManager::install(\"concordexR\", version=\"devel\") devtools::install_github(\"pachterlab/concordexR\")"},{"path":"https://pachterlab.github.io/concordexR/articles/overview.html","id":"example-of-main-functionality","dir":"Articles","previous_headings":"","what":"Example of main functionality","title":"Overview of concordexR","text":"basic example shows solve common problem:","code":"library(concordexR) library(SFEData)  sfe <- McKellarMuscleData(\"small\") #> see ?SFEData and browseVignettes('SFEData') for documentation #> downloading 1 resources #> retrieving 1 resource #> loading from cache #> require(\"SpatialFeatureExperiment\") res <- calculateConcordex(sfe, labels=colData(sfe)[[\"in_tissue\"]])"},{"path":"https://pachterlab.github.io/concordexR/articles/overview.html","id":"sessioninfo","dir":"Articles","previous_headings":"","what":"SessionInfo","title":"Overview of concordexR","text":"","code":"sessionInfo() #> R version 4.4.2 (2024-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.1 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] SpatialFeatureExperiment_1.6.1 SFEData_1.6.0                  #> [3] concordexR_1.7.1               BiocStyle_2.32.1               #>  #> loaded via a namespace (and not attached): #>   [1] wk_0.9.4                    jsonlite_1.8.9              #>   [3] magrittr_2.0.3              magick_2.8.5                #>   [5] rmarkdown_2.29              fs_1.6.5                    #>   [7] zlibbioc_1.50.0             ragg_1.3.3                  #>   [9] vctrs_0.6.5                 spdep_1.3-8                 #>  [11] memoise_2.0.1               DelayedMatrixStats_1.26.0   #>  [13] RCurl_1.98-1.16             terra_1.8-10                #>  [15] htmltools_0.5.8.1           S4Arrays_1.4.1              #>  [17] AnnotationHub_3.12.0        curl_6.1.0                  #>  [19] BiocNeighbors_1.22.0        s2_1.1.7                    #>  [21] Rhdf5lib_1.26.0             SparseArray_1.4.8           #>  [23] rhdf5_2.48.0                sass_0.4.9                  #>  [25] spData_2.3.4                KernSmooth_2.23-24          #>  [27] bslib_0.8.0                 htmlwidgets_1.6.4           #>  [29] desc_1.4.3                  cachem_1.1.0                #>  [31] igraph_2.1.3                mime_0.12                   #>  [33] lifecycle_1.0.4             pkgconfig_2.0.3             #>  [35] Matrix_1.7-1                R6_2.5.1                    #>  [37] fastmap_1.2.0               GenomeInfoDbData_1.2.12     #>  [39] MatrixGenerics_1.16.0       digest_0.6.37               #>  [41] AnnotationDbi_1.66.0        S4Vectors_0.42.1            #>  [43] dqrng_0.4.1                 ExperimentHub_2.12.0        #>  [45] textshaping_0.4.1           GenomicRanges_1.56.2        #>  [47] RSQLite_2.3.9               beachmat_2.20.0             #>  [49] filelock_1.0.3              httr_1.4.7                  #>  [51] abind_1.4-8                 compiler_4.4.2              #>  [53] proxy_0.4-27                bit64_4.5.2                 #>  [55] withr_3.0.2                 tiff_0.1-12                 #>  [57] BiocParallel_1.38.0         DBI_1.2.3                   #>  [59] HDF5Array_1.32.1            R.utils_2.12.3              #>  [61] rappdirs_0.3.3              DelayedArray_0.30.1         #>  [63] rjson_0.2.23                classInt_0.4-11             #>  [65] bluster_1.14.0              tools_4.4.2                 #>  [67] units_0.8-5                 R.oo_1.27.0                 #>  [69] glue_1.8.0                  EBImage_4.46.0              #>  [71] rhdf5filters_1.16.0         grid_4.4.2                  #>  [73] sf_1.0-19                   cluster_2.1.6               #>  [75] generics_0.1.3              R.methodsS3_1.8.2           #>  [77] class_7.3-22                data.table_1.16.4           #>  [79] sp_2.1-4                    XVector_0.44.0              #>  [81] BiocGenerics_0.50.0         BiocVersion_3.19.1          #>  [83] pillar_1.10.1               limma_3.60.6                #>  [85] dplyr_1.1.4                 BiocFileCache_2.12.0        #>  [87] lattice_0.22-6              deldir_2.0-4                #>  [89] bit_4.5.0.1                 tidyselect_1.2.1            #>  [91] SingleCellExperiment_1.26.0 locfit_1.5-9.10             #>  [93] Biostrings_2.72.1           scuttle_1.14.0              #>  [95] sfheaders_0.4.4             knitr_1.49                  #>  [97] bookdown_0.42               IRanges_2.38.1              #>  [99] edgeR_4.2.2                 SummarizedExperiment_1.34.0 #> [101] stats4_4.4.2                xfun_0.50                   #> [103] Biobase_2.64.0              statmod_1.5.0               #> [105] DropletUtils_1.24.0         matrixStats_1.5.0           #> [107] UCSC.utils_1.0.0            fftwtools_0.9-11            #> [109] boot_1.3-31                 yaml_2.3.10                 #> [111] evaluate_1.0.3              codetools_0.2-20            #> [113] tibble_3.2.1                BiocManager_1.30.25         #> [115] cli_3.6.3                   systemfonts_1.1.0           #> [117] jquerylib_0.1.4             Rcpp_1.0.14                 #> [119] GenomeInfoDb_1.40.1         zeallot_0.1.0               #> [121] dbplyr_2.5.0                png_0.1-8                   #> [123] parallel_4.4.2              pkgdown_2.1.1               #> [125] blob_1.2.4                  jpeg_0.1-10                 #> [127] sparseMatrixStats_1.16.0    bitops_1.0-9                #> [129] SpatialExperiment_1.14.0    e1071_1.7-16                #> [131] purrr_1.0.2                 crayon_1.5.3                #> [133] rlang_1.1.4                 KEGGREST_1.44.1"},{"path":"https://pachterlab.github.io/concordexR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kayla Jackson. Author, maintainer. . Sina Booeshaghi. Author. Angel Galvez-Merchan. Author. Lambda Moses. Author. Alexandra Kim. Contributor. Laura Luebbert. Contributor. Lior Pachter. Author, reviewer, thesis advisor.","code":""},{"path":"https://pachterlab.github.io/concordexR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jackson K, Booeshaghi , Galvez-Merchan , Moses L, Pachter L (2025). concordexR: Identify Spatial Homogeneous Regions concordex. R package version 1.7.1, https://pachterlab.github.io/concordexR/, https://github.com/pachterlab/concordexR.","code":"@Manual{,   title = {concordexR: Identify Spatial Homogeneous Regions with concordex},   author = {Kayla Jackson and A. Sina Booeshaghi and Angel Galvez-Merchan and Lambda Moses and Lior Pachter},   year = {2025},   note = {R package version 1.7.1,     https://pachterlab.github.io/concordexR/},   url = {https://github.com/pachterlab/concordexR}, }"},{"path":"https://pachterlab.github.io/concordexR/index.html","id":"concordexr","dir":"","previous_headings":"","what":"Identify Spatial Homogeneous Regions with concordex","title":"Identify Spatial Homogeneous Regions with concordex","text":"goal concordexR identify spatial homogeneous regions (SHRs) defined recent manuscript, “Identification spatial homogenous regions tissues concordex”. Briefly, SHRs domains homogeneous respect cell type composition. concordex relies k-nearest-neighbor (kNN) graph representing similarities cells uses common clustering algorithms identify SHRs.","code":""},{"path":"https://pachterlab.github.io/concordexR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Identify Spatial Homogeneous Regions with concordex","text":"(Recommended) can install development version concordexR GitHub : Versions concordexR package enable clustering spatial data spatial homogeneous regions (SHRs) available Bioconductor versions 3.17-19. recent version package slated released Bioconductor version 3.20. can install Bioconductor development version :","code":"# install.packages(\"devtools\") devtools::install_github(\"pachterlab/concordexR\") #> Using GitHub PAT from the git credential store. #> Skipping install of 'concordexR' from a github remote, the SHA1 (046127e9) has not changed since last install. #>   Use `force = TRUE` to force installation if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")      BiocManager::install(version=\"devel\") BiocManager::install(\"concordexR\")"},{"path":"https://pachterlab.github.io/concordexR/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Identify Spatial Homogeneous Regions with concordex","text":"basic example using concordex:","code":"library(SFEData) library(Voyager) #> Loading required package: SpatialFeatureExperiment #>  #> Attaching package: 'SpatialFeatureExperiment' #> The following object is masked from 'package:base': #>  #>     scale library(scran) #> Loading required package: SingleCellExperiment #> Loading required package: SummarizedExperiment #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: 'MatrixGenerics' #> The following objects are masked from 'package:matrixStats': #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: BiocGenerics #>  #> Attaching package: 'BiocGenerics' #> The following objects are masked from 'package:stats': #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from 'package:base': #>  #>     anyDuplicated, aperm, append, as.data.frame, basename, cbind, #>     colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, #>     get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, #>     match, mget, order, paste, pmax, pmax.int, pmin, pmin.int, #>     Position, rank, rbind, Reduce, rownames, sapply, setdiff, table, #>     tapply, union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #>  #> Attaching package: 'S4Vectors' #> The following object is masked from 'package:utils': #>  #>     findMatches #> The following objects are masked from 'package:base': #>  #>     expand.grid, I, unname #> Loading required package: IRanges #> Loading required package: GenomeInfoDb #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: 'Biobase' #> The following object is masked from 'package:MatrixGenerics': #>  #>     rowMedians #> The following objects are masked from 'package:matrixStats': #>  #>     anyMissing, rowMedians #> Loading required package: scuttle library(bluster)  library(concordexR) sfe <- McKellarMuscleData(\"small\") #> see ?SFEData and browseVignettes('SFEData') for documentation #> loading from cache clusters <- quickCluster(sfe, min.size=2, d=15) nbc <- calculateConcordex(     sfe,     clusters,     n_neighbors=10,     BLUSPARAM=KmeansParam(2) )  colData(sfe)[[\"shr\"]] <- attr(nbc, \"shrs\") plotSpatialFeature(sfe, features=\"shr\")"},{"path":"https://pachterlab.github.io/concordexR/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Identify Spatial Homogeneous Regions with concordex","text":"’d like use concordexR package research, please cite recent bioRxiv preprint Jackson, K.; Booeshaghi, . S.; Gálvez-Merchán, Á.; Moses, L.; Chari, T.; Pachter, L. Quantitative assessment single-cell RNA-seq clustering CONCORDEX. bioRxiv (Cold Spring Harbor Laboratory) 2023. https://doi.org/10.1101/2023.06.28.546949. @article {Jackson2023.06.28.546949, author = {Jackson, Kayla C. Booeshaghi, . Sina G{’}lvez-Merch{’}n, {’}ngel Moses, Lambda Chari, Tara Kim, Alexandra Pachter, Lior}, title = {Identification spatial homogeneous regions tissues concordex}, year = {2024}, doi = {10.1101/2023.06.28.546949}, publisher = {Cold Spring Harbor Laboratory}, URL = {https://www.biorxiv.org/content/early/2024/07/18/2023.06.28.546949}, journal = {bioRxiv} }","code":""},{"path":"https://pachterlab.github.io/concordexR/index.html","id":"maintainer","dir":"","previous_headings":"","what":"Maintainer","title":"Identify Spatial Homogeneous Regions with concordex","text":"Kayla Jackson","code":""},{"path":"https://pachterlab.github.io/concordexR/reference/calculateConcordex.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Spatially Homogeneous Regions with concordex — calculateConcordex","title":"Identify Spatially Homogeneous Regions with concordex — calculateConcordex","text":"Compute neighborhood consolidation matrix identify spatial homogeneous regions.","code":""},{"path":"https://pachterlab.github.io/concordexR/reference/calculateConcordex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Spatially Homogeneous Regions with concordex — calculateConcordex","text":"","code":"calculateConcordex(x, ...)  runConcordex(x, ...)  # S4 method for class 'ANY' calculateConcordex(   x,   labels,   ...,   n_neighbors = 30,   compute_similarity = FALSE,   BLUSPARAM,   BNINDEX,   BNPARAM = KmknnParam(),   BPPARAM = SerialParam() )  # S4 method for class 'SummarizedExperiment' calculateConcordex(x, labels, ..., assay.type = \"logcounts\")  # S4 method for class 'SingleCellExperiment' calculateConcordex(x, labels, ..., use.dimred = NULL)  # S4 method for class 'SpatialExperiment' calculateConcordex(x, labels, ..., use.spatial = TRUE)  # S4 method for class 'SpatialExperiment' runConcordex(x, labels, ..., name = \"NBC\")  # S4 method for class 'SingleCellExperiment' runConcordex(x, labels, ..., name = \"NBC\")"},{"path":"https://pachterlab.github.io/concordexR/reference/calculateConcordex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Spatially Homogeneous Regions with concordex — calculateConcordex","text":"x SpatialExperiment, SpatialFeatureExperiment, SingleCellExperiment, SummarizedExperiment object containing count matrix. Otherwise, numeric matrix-like object containing counts observations (e.g. cells/spots) rows features columns. ... parameters passed default method labels Observation labels used compute neighborhood consolidation matrix. Continuous discrete labels allowed, typically, integer labels assumed discrete. Labels can specified follows: vector matrix-like object one entry per observation matrix, observations rows label identifiers columns. x inherits SummarizedExperiment-class, string character vector specifying names columns colData(x) name dimensionality reduction result (see reducedDimNames) n_neighbors Number neighbors expect observation. Defaults 30. compute_similarity Logical. Whether return label similarity matrix. useful discrete labels provided. BLUSPARAM BlusterParam-class object specifying clustering algorithm use identify spatial homogeneous regions. parameter specified, regions returned. default, parameter missing. BNINDEX BiocNeighborIndex object containing precomputed index information, see findKNN. BNPARAM BiocNeighborParam object specifying algorithm use. can missing BNINDEX supplied, see findKNN. BPPARAM BiocParallelParam object specifying whether computing metric numerous observations shall parallelized (see bpparam). assay.type String integer scalar indicating assay x containing counts. use.dimred Integer string specifying reduced dimensions use construction k-nearest neighbor graph. Note NULL, reduced dimensions can used labels compute neighborhood consolidation matrix. use.spatial Logical, spatial coordinates used compute k-nearest neighbor graph? name String specifying name used store result reducedDims output.","code":""},{"path":"https://pachterlab.github.io/concordexR/reference/calculateConcordex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify Spatially Homogeneous Regions with concordex — calculateConcordex","text":"sparse matrix","code":""},{"path":"https://pachterlab.github.io/concordexR/reference/calculateConcordex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify Spatially Homogeneous Regions with concordex — calculateConcordex","text":"","code":"example(read10xVisium, \"SpatialExperiment\") #> Loading required package: SingleCellExperiment #> Loading required package: SummarizedExperiment #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: ‘MatrixGenerics’ #> The following objects are masked from ‘package:matrixStats’: #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: BiocGenerics #>  #> Attaching package: ‘BiocGenerics’ #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, setdiff, table, tapply, #>     union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #>  #> Attaching package: ‘S4Vectors’ #> The following object is masked from ‘package:utils’: #>  #>     findMatches #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname #> Loading required package: IRanges #> Loading required package: GenomeInfoDb #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: ‘Biobase’ #> The following object is masked from ‘package:MatrixGenerics’: #>  #>     rowMedians #> The following objects are masked from ‘package:matrixStats’: #>  #>     anyMissing, rowMedians #>  #> rd10xV> dir <- system.file( #> rd10xV+   file.path(\"extdata\", \"10xVisium\"),  #> rd10xV+   package = \"SpatialExperiment\") #>  #> rd10xV> sample_ids <- c(\"section1\", \"section2\") #>  #> rd10xV> samples <- file.path(dir, sample_ids, \"outs\") #>  #> rd10xV> list.files(samples[1]) #> [1] \"raw_feature_bc_matrix\" \"spatial\"               #>  #> rd10xV> list.files(file.path(samples[1], \"spatial\")) #> [1] \"scalefactors_json.json\"    \"tissue_lowres_image.png\"   #> [3] \"tissue_positions_list.csv\" #>  #> rd10xV> file.path(samples[1], \"raw_feature_bc_matrix\") #> [1] \"/home/runner/work/_temp/Library/SpatialExperiment/extdata/10xVisium/section1/outs/raw_feature_bc_matrix\" #>  #> rd10xV> (spe <- read10xVisium(samples, sample_ids,  #> rd10xV+   type = \"sparse\", data = \"raw\",  #> rd10xV+   images = \"lowres\", load = FALSE)) #> class: SpatialExperiment  #> dim: 50 99  #> metadata(0): #> assays(1): counts #> rownames(50): ENSMUSG00000051951 ENSMUSG00000089699 ... #>   ENSMUSG00000005886 ENSMUSG00000101476 #> rowData names(1): symbol #> colnames(99): AAACAACGAATAGTTC-1 AAACAAGTATCTCCCA-1 ... #>   AAAGTCGACCCTCAGT-1 AAAGTGCCATCAATTA-1 #> colData names(4): in_tissue array_row array_col sample_id #> reducedDimNames(0): #> mainExpName: NULL #> altExpNames(0): #> spatialCoords names(2) : pxl_col_in_fullres pxl_row_in_fullres #> imgData names(4): sample_id image_id data scaleFactor #>  #> rd10xV> # base directory 'outs/' from Space Ranger can also be omitted #> rd10xV> samples2 <- file.path(dir, sample_ids) #>  #> rd10xV> (spe2 <- read10xVisium(samples2, sample_ids,  #> rd10xV+   type = \"sparse\", data = \"raw\",  #> rd10xV+   images = \"lowres\", load = FALSE)) #> class: SpatialExperiment  #> dim: 50 99  #> metadata(0): #> assays(1): counts #> rownames(50): ENSMUSG00000051951 ENSMUSG00000089699 ... #>   ENSMUSG00000005886 ENSMUSG00000101476 #> rowData names(1): symbol #> colnames(99): AAACAACGAATAGTTC-1 AAACAAGTATCTCCCA-1 ... #>   AAAGTCGACCCTCAGT-1 AAAGTGCCATCAATTA-1 #> colData names(4): in_tissue array_row array_col sample_id #> reducedDimNames(0): #> mainExpName: NULL #> altExpNames(0): #> spatialCoords names(2) : pxl_col_in_fullres pxl_row_in_fullres #> imgData names(4): sample_id image_id data scaleFactor #>  #> rd10xV> # tabulate number of spots mapped to tissue #> rd10xV> cd <- colData(spe) #>  #> rd10xV> table( #> rd10xV+   in_tissue = cd$in_tissue,  #> rd10xV+   sample_id = cd$sample_id) #>          sample_id #> in_tissue section1 section2 #>     FALSE       28       27 #>     TRUE        22       22 #>  #> rd10xV> # view available images #> rd10xV> imgData(spe) #> DataFrame with 2 rows and 4 columns #>     sample_id    image_id   data scaleFactor #>   <character> <character> <list>   <numeric> #> 1    section1      lowres   ####   0.0510334 #> 2    section2      lowres   ####   0.0510334 library(bluster)  ## Setting BLUSPARAM clusters the consolidation ## matrix into SHRs cdx <- calculateConcordex(   spe, \"in_tissue\",   n_neighbors=10,   BLUSPARAM=KmeansParam(3) )  ## SHRs are an attribute of the result shr <- attr(cdx, \"shr\")  ## The label similarity matrix can be computed ## with `compute_similarity=TRUE` cdx <- calculateConcordex(   spe, \"in_tissue\",   n_neighbors=10,   compute_similarity=TRUE,   BLUSPARAM=KmeansParam(3) )"},{"path":"https://pachterlab.github.io/concordexR/news/index.html","id":"concordexr-0990-03312023","dir":"Changelog","previous_headings":"","what":"concordexR 0.99.0 (03/31/2023)","title":"concordexR 0.99.0 (03/31/2023)","text":"Submitted Biconductor.","code":""}]
